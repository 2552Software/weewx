#!/usr/bin/env python
#
#    Copyright (c) 2009-2015 Tom Keffer <tkeffer@gmail.com>
#
#    See the file LICENSE.txt for your full rights.
#
"""Configure the configuration file."""
from __future__ import with_statement

import sys
import syslog
import optparse

from weecfg.config import ConfigEngine

usage="""wee_config --help
       wee_config --version
       wee_config --list-drivers
       wee_config --install --dist-config=DIST_CONFIG --output=OUT_CONFIG
           [--driver=DRIVER]
           [--latitude=yy.y] [--longitude=xx.x] [--altitude=zz.z,(foot|meter)] 
           [--location="Home Sweet Home"] [--units=(us|metric)]
           [--no-prompt]
       wee_config --update CONFIG_FILE|--config=CONFIG_FILE --dist-config=DIST_CONFIG
           [--output=OUT_CONFIG] [--no-prompt]
       wee_config --merge  CONFIG_FILE|--config=CONFIG_FILE --dist-config=DIST_CONFIG 
           --output=OUT_CONFIG
       wee_config --modify CONFIG_FILE|--config=CONFIG_FILE
           [--driver=DRIVER]
           [--latitude=yy.y] [--longitude=xx.x] [--altitude=zz.z,(foot|meter)] 
           [--location="Home Sweet Home"] [--units=(us|metric)]
           [--output=OUT_CONFIG] [--no-prompt]
           
COMMANDS:

--help         Print instructions, then exit.
--version      Print the version of weewx, then exit.
--list-drivers List the available weewx device drivers, then exit.
--install      Install DIST_CONFIG to OUT_CONFIG, prompting as necessary.
--update       Update the contents of configuration file CONFIG_FILE,
               then merge the result into configuration file DIST_CONFIG.
               Write the results to CONFIG_FILE unless an OUT_CONFIG
               is specified.               
--merge        Update the contents of configuration file CONFIG_FILE,
               then merge the result into configuration file DIST_CONFIG.
               Write the results to OUT_CONFIG. 
--modify       Modify the configuration file, prompting as necessary.
               Use this to add a driver.

wee_config is used to configure your weewx configuration file (nominally,
weewx.conf). Its location can be given as a command-line argument, 
or it can be specified with option --config.
"""

def main():

    # Set defaults for the system logger:
    syslog.openlog('wee_config', syslog.LOG_PID|syslog.LOG_CONS)

    # Create a command line parser:
    parser = optparse.OptionParser(usage=usage)
    
    # Add the various options:
    parser.add_option("--version", action="store_true",
                      help="Print the version of weewx and exit.")
    parser.add_option("--list-drivers", action="store_true",
                      help="List all the available weewx device drivers, then exit.")
    parser.add_option("--install", action="store_true",
                      help="Install DIST_CONFIG to OUT_FILE. Prompt as necessary.")
    parser.add_option("--update", action="store_true",
                      help="Update an existing configuration file to the current version, then merge "
                      "into DIST_CONFIG. Save results to CONFIG_FILE.")
    parser.add_option("--merge", action="store_true",
                      help="Update an existing configuration file to the current version, then merge "
                      "into DIST_CONFIG. Save results to OUT_CONFIG.")
    parser.add_option("--modify", action="store_true",
                      help="Modify the configuration file. Prompt as necessary.")
    parser.add_option("--config", dest="config_path", metavar="CONFIG_FILE",
                      help="Use configuration file CONFIG_FILE.")
    parser.add_option("--dist-config",
                      help="Path to the new, incoming configuration file. This is usually supplied "
                      "by a distribution.")
    parser.add_option("--output", metavar="OUT_CONFIG",
                      help="Where the results should be written.")
    parser.add_option("--no-prompt", action="store_true",
                      help="Do not issue prompts. Use default values or specified options.")
    parser.add_option("--driver", metavar="DRIVER",
                      help="Use the driver DRIVER, e.g., weewx.driver.vantage. ")
    parser.add_option("--latitude", metavar="yy.y",
                      help="The station latitude")
    parser.add_option("--longitude", metavar="xx.x",
                      help="The station longitude")
    parser.add_option("--altitude", metavar="zz,(foot|meter)",
                      help="The station altitude in either feet or meters. E.g., '750,foot'")
    parser.add_option("--location",
                      help="""A text description of the station. For example, "Santa's workshop, North Pole" """)
    parser.add_option("--units", choices=["us", "metric"], metavar="(metric|us)",
                      help="Set display units to 'metric' or 'us'")
    parser.add_option("--debug", action="store_true",
                      help="Print some intermediate data structures")

    # Now we are ready to parse the command line:
    (options, args) = parser.parse_args()
    
    config_mgr = ConfigEngine()
    
    sys.exit(config_mgr.run(args, options))

if __name__=="__main__" :
    main()
    
